;   ***************************************************************
;   * Copyright (C) 2011, Embed Inc (http://www.embedinc.com)     *
;   *                                                             *
;   * Permission to copy this file is granted as long as this     *
;   * copyright notice is included in its entirety at the         *
;   * beginning of the file, whether the file is copied in whole  *
;   * or in part and regardless of whether other information is   *
;   * added to the copy.                                          *
;   *                                                             *
;   * The contents of this file may be used in any way,           *
;   * commercial or otherwise.  This file is provided "as is",    *
;   * and Embed Inc makes no claims of suitability for a          *
;   * particular purpose nor assumes any liability resulting from *
;   * its use.                                                    *
;   ***************************************************************
;
;   USB stream command processor.  The routines in this module interpret and
;   process the command stream coming from the host computer via the USB.
;
;   The code in this module requires some global flags in addition to the
;   standard USB flags.  The flags below are defined such that they can be
;   copied into the project include file and uncommented.
;
;   /flag    cmdreset            ;reset command processor logic next time run
;   /flag    namecmd             ;name get routines acquired by command processor
;   /flag    rsp_lock            ;response to host is locked by a task
;   /flag    cmd_rsplock         ;response lock is being held by command proc task
;
;   The CMDRESET flag is not needed if USE_USBRESET set to TRUE below.  The USB
;   code automatically sets USBRESET when a USB reset is detected.  This is the
;   only app interface for getting notified about a USB reset.  The application
;   may need to do other things than just resetting the command processor on a
;   USB reset.  In that case, USBRESET should be a condition handled in the main
;   event loop, which then sets CMDRESET as one of its tasks.  If the only
;   response to a USB reset is to reset the command processor, then the USBRESET
;   flag can be used here directly.  That is done by setting USE_USBRESET to
;   TRUE.
;
/include "qq2.ins.aspic"

;*******************************************************************************
;
;   Configuration settings.
;
/const   use_usbreset bool = False ;use CMDRESET flag, not USBRESET directly
/const   cmdpref string = "cmd_" ;start of command opcode symbol names
stacksz  equ     64          ;size of command processor data stack
lbank    equ     0           ;register bank for the local state of this module

/include "(cog)src/pic/cmdusb.ins.aspic"
         end
