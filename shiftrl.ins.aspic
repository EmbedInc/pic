;   Subroutine SHIFTRL
;
;   Perform a logical shift right of REGA.  REG4 is the number of bits to
;   shift right.  REG4 may be negative in which case REGA will be shifted
;   left -REG4 bits.  Nothing will be done if REG4 is zero.
;
.shiftrl code
         glbsub  shiftrl, regf4

         movf    reg4        ;set Z flag on zero shift count
         skip_nz
         goto    shiftrl_leave ;nothing to do ?
         btfsc   reg4, 7     ;shift count is positive ?
         goto    shiftrl_neg ;shift count is negative
;
;   Shifting to the right.
;
shiftrl_posl                 ;back here each additional bit to shift
         shift32rl1 rega     ;shift accumulator logical right by one bit
         decfsz  reg4        ;count one less bit shift to go
         goto    shiftrl_posl ;back to shift another bit right
         goto    shiftrl_leave
;
;   Shifting to the left.
;
shiftrl_neg
         shift32l1 rega      ;shift accumulator left by one bit
         incfsz  reg4        ;count one less bit shift to go
         goto    shiftrl_neg ;back to shift another bit left

shiftrl_leave                ;common exit point
         leave   regf4
