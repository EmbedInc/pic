;   ***************************************************************
;   * Copyright (C) 2008, Embed Inc (http://www.embedinc.com)     *
;   *                                                             *
;   * Permission to copy this file is granted as long as this     *
;   * copyright notice is included in its entirety at the         *
;   * beginning of the file, whether the file is copied in whole  *
;   * or in part and regardless of whether other information is   *
;   * added to the copy.                                          *
;   *                                                             *
;   * The contents of this file may be used in any way,           *
;   * commercial or otherwise.  This file is provided "as is",    *
;   * and Embed Inc makes no claims of suitability for a          *
;   * particular purpose nor assumes any liability resulting from *
;   * its use.                                                    *
;   ***************************************************************
;
;   This file defines symbols that specify configuration choices for the USB
;   within a particular project.  The file is intended to be copied into any
;   project using the USB code, and renamed accordingly.  The resulting file is
;   then intended to be included from the main project include file, which
;   causes the definitions here to be globally visible to all code of the
;   project.
;

;********************
;
;   Configuration constants.
;
usb_vid  equ     5824        ;USB vendor ID of this device (Voti vendor ID)
usb_pid  equ     1481        ;device ID within VID, U1EX USB demo firmware

;********************
;
;   Define the endpoints in use and the size of their buffers.  The constants
;   OUTnSZ and INnSZ must be defined for each endpoint, and indicate the size of
;   the OUT and IN buffers, repsectively.  If a direction/endpoint is not used,
;   the associated constant must be set to 0.
;
;   There will be three buffers of the indicated size allocated for each
;   constant, plus some control state.  Note that the USB spec sets limitations
;   on buffer sizes for the various transfer types.  The legal buffer sizes for
;   control and bulk endpoints is 8, 16, 32, and 64 bytes.  Since endpoint 0 is
;   only used for the mandatory control communication, there is little reason to
;   make it's buffers larger than the minimum of 8 bytes.
;
out0sz   equ     8           ;buffer size for endpoint 0 OUT, must be enabled
in0sz    equ     8           ;buffer size for endpoint 0 IN, must be enabled
out1sz   equ     64          ;buffer size for endpoint 1 OUT
in1sz    equ     64          ;buffer size for endpoint 1 IN
out2sz   equ     0           ;buffer size for endpoint 2 OUT
in2sz    equ     0           ;buffer size for endpoint 2 IN
out3sz   equ     0           ;buffer size for endpoint 3 OUT
in3sz    equ     0           ;buffer size for endpoint 3 IN
out4sz   equ     0           ;buffer size for endpoint 4 OUT
in4sz    equ     0           ;buffer size for endpoint 4 IN
out5sz   equ     0           ;buffer size for endpoint 5 OUT
in5sz    equ     0           ;buffer size for endpoint 5 IN
out6sz   equ     0           ;buffer size for endpoint 6 OUT
in6sz    equ     0           ;buffer size for endpoint 6 IN
out7sz   equ     0           ;buffer size for endpoint 7 OUT
in7sz    equ     0           ;buffer size for endpoint 7 IN
out8sz   equ     0           ;buffer size for endpoint 8 OUT
in8sz    equ     0           ;buffer size for endpoint 8 IN
out9sz   equ     0           ;buffer size for endpoint 9 OUT
in9sz    equ     0           ;buffer size for endpoint 9 IN
out10sz  equ     0           ;buffer size for endpoint 10 OUT
in10sz   equ     0           ;buffer size for endpoint 10 IN
out11sz  equ     0           ;buffer size for endpoint 11 OUT
in11sz   equ     0           ;buffer size for endpoint 11 IN
out12sz  equ     0           ;buffer size for endpoint 12 OUT
in12sz   equ     0           ;buffer size for endpoint 12 IN
out13sz  equ     0           ;buffer size for endpoint 13 OUT
in13sz   equ     0           ;buffer size for endpoint 13 IN
out14sz  equ     0           ;buffer size for endpoint 14 OUT
in14sz   equ     0           ;buffer size for endpoint 14 IN
out15sz  equ     0           ;buffer size for endpoint 15 OUT
in15sz   equ     0           ;buffer size for endpoint 15 IN
;
;   Define the type of transfers for each endpoint.  The constants INnTYPE and
;   OUTnTYPE must be defined for each endpoint.  The value for unused
;   direction/endpoints (buffer size set to 0) is irrelevant.  Note that the USB
;   spec requires both directions for endpoint 0 to use control transfers.
;
;   Each of the OUTnTYPE and INnTYPE constants below should be set to one of the
;   pre-define values:
;
;     IOTYPE_CTRL  -  Control transfer type.
;     IOTYPE_BULK  -  Bulk transfer type.
;     IOTYPE_ISCH  -  Isochronous transfer type.
;     IOTYPE_INTR  -  Interrupt transfer type.
;
out0type equ     iotype_ctrl ;endpoint 0 OUT transfer type, must be CTRL
in0type  equ     iotype_ctrl ;endpoint 0 IN transfer type, must be CTRL
out1type equ     iotype_bulk ;endpoint 1 OUT transfer type
in1type  equ     iotype_bulk ;endpoint 1 IN transfer type
out2type equ     iotype_bulk ;endpoint 2 OUT transfer type
in2type  equ     iotype_bulk ;endpoint 2 IN transfer type
out3type equ     iotype_bulk ;endpoint 3 OUT transfer type
in3type  equ     iotype_bulk ;endpoint 3 IN transfer type
out4type equ     iotype_bulk ;endpoint 4 OUT transfer type
in4type  equ     iotype_bulk ;endpoint 4 IN transfer type
out5type equ     iotype_bulk ;endpoint 5 OUT transfer type
in5type  equ     iotype_bulk ;endpoint 5 IN transfer type
out6type equ     iotype_bulk ;endpoint 6 OUT transfer type
in6type  equ     iotype_bulk ;endpoint 6 IN transfer type
out7type equ     iotype_bulk ;endpoint 7 OUT transfer type
in7type  equ     iotype_bulk ;endpoint 7 IN transfer type
out8type equ     iotype_bulk ;endpoint 8 OUT transfer type
in8type  equ     iotype_bulk ;endpoint 8 IN transfer type
out9type equ     iotype_bulk ;endpoint 9 OUT transfer type
in9type  equ     iotype_bulk ;endpoint 9 IN transfer type
out10type equ    iotype_bulk ;endpoint 10 OUT transfer type
in10type equ     iotype_bulk ;endpoint 10 IN transfer type
out11type equ    iotype_bulk ;endpoint 11 OUT transfer type
in11type equ     iotype_bulk ;endpoint 11 IN transfer type
out12type equ    iotype_bulk ;endpoint 12 OUT transfer type
in12type equ     iotype_bulk ;endpoint 12 IN transfer type
out13type equ    iotype_bulk ;endpoint 13 OUT transfer type
in13type equ     iotype_bulk ;endpoint 13 IN transfer type
out14type equ    iotype_bulk ;endpoint 14 OUT transfer type
in14type equ     iotype_bulk ;endpoint 14 IN transfer type
out15type equ    iotype_bulk ;endpoint 15 OUT transfer type
in15type equ     iotype_bulk ;endpoint 15 IN transfer type
